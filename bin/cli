#!/usr/bin/env php
<?php
require __DIR__ . '/../vendor/autoload.php';

use WakeOnStorage\Init;

function usage() {
    echo "Usage:\n";
    echo "  cli spool [-n NUM]\n";
    echo "  cli event [-h HOST] [-u USER] [-i IP] [-n NUM]\n";
    exit(1);
}

$cmd = $argv[1] ?? null;
if (!$cmd) {
    usage();
}

$limit = 10;
$host = null;
$user = null;
$ip = null;

for ($i = 2; $i < $argc; $i++) {
    $arg = $argv[$i];
    switch ($arg) {
        case '-n':
            $i++;
            $limit = isset($argv[$i]) ? (int)$argv[$i] : 10;
            break;
        case '-h':
            $i++;
            $host = $argv[$i] ?? null;
            break;
        case '-u':
            $i++;
            $user = $argv[$i] ?? null;
            break;
        case '-i':
            $i++;
            $ip = $argv[$i] ?? null;
            break;
        default:
            usage();
    }
}

$global = Init::globalConfig();
$pdo = Init::initDb($global);

if ($cmd === 'spool') {
    $stmt = $pdo->prepare('SELECT id, host, action, run_at, user, ip, attempts FROM spool ORDER BY run_at ASC LIMIT ?');
    $stmt->bindValue(1, $limit, PDO::PARAM_INT);
    $stmt->execute();
    foreach ($stmt->fetchAll(PDO::FETCH_ASSOC) as $row) {
        $time = date('Y-m-d H:i:s', (int)$row['run_at']);
        echo sprintf("%s %-15s %-12s user=%s ip=%s attempts=%d\n",
            $time,
            $row['host'],
            $row['action'],
            $row['user'],
            $row['ip'],
            (int)$row['attempts']
        );
    }
} elseif ($cmd === 'event') {
    $conds = [];
    $params = [];
    if ($host !== null) { $conds[] = 'host=?'; $params[] = $host; }
    if ($user !== null) { $conds[] = 'user=?'; $params[] = $user; }
    if ($ip !== null)   { $conds[] = 'ip=?';   $params[] = $ip;   }
    $sql = 'SELECT id, created_at, host, action, user, ip FROM events';
    if ($conds) {
        $sql .= ' WHERE ' . implode(' AND ', $conds);
    }
    $sql .= ' ORDER BY id DESC LIMIT ?';
    $params[] = $limit;
    $stmt = $pdo->prepare($sql);
    $stmt->execute($params);
    foreach ($stmt->fetchAll(PDO::FETCH_ASSOC) as $row) {
        echo sprintf("%5d %s %-15s %-12s %s %s\n",
            $row['id'],
            $row['created_at'],
            $row['host'],
            $row['action'],
            $row['user'],
            $row['ip']
        );
    }
} else {
    usage();
}

?>
